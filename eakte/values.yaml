imageCredentials:
  dockeryuuvisorg:
    registry: docker.yuuvis.org
    username: changeme
    password: changeme
redis:
  enabled: true
  fullnameOverride: redis
  ## Cluster settings
  architecture: standalone
  auth:
    enabled: false
  master:
    livenessProbe:
      initialDelaySeconds: 600
    persistence:
      enabled: true
      size: 512Mi
      storageClass: default
    tolerations:
      - key: "redis"
        operator: "Exists"
        effect: "NoSchedule"
postgresql:
  enabled: true
  auth:
    postgresPassword: changeme
  primary:  
    resources:
      requests:
        memory: 128Mi
        cpu: 50m
    initdb:
      scriptsConfigMap: postgresql-initdb
    persistence:
      size: 500Mi
    tolerations:
      - key: "postgresql"
        operator: "Exists"
        effect: "NoSchedule"
yuuvis:
  namespace: yuuvis
  api:
    url: "http://api.yuuvis/api"
  amqp:
    url: rabbitmq.infrastructure:5672
    username: rodger
    password: changeme
  configservice:
    url: "http://configservice.yuuvis/config"
  selfSignedCerts:
    copyToEAkte: true
    secretName: keycloak-selfsigned-cert-secret
  systemAdmin:
    tenant: changeme
    username: changeme
    password: changeme
  

nginx:
  enabled: true
  fullnameOverride: eakte
  namespaceOverride: yuuvis
  commonLabels:
    yuuvis: "true"
  replicaCount: 1
  tolerations:
    - key: "nginx"
      operator: "Exists"
      effect: "NoSchedule"
  service:
    type: ClusterIP
  serverBlock: |-
    server {
        listen  8080;
        client_max_body_size 4096M;
        gzip on;
        gzip_proxied any;
        gzip_min_length 10240;
        gzip_types *;
        location / {
            proxy_set_header X-Forwarded-Prefix /eakte;
            proxy_pass http://eakte-client.{{.Release.Namespace}};
        }
        location /api/v1/ {
            proxy_set_header X-Forwarded-Prefix /eakte/api/v1;
            proxy_pass http://eakte-api.{{.Release.Namespace}}/;
        }
        location /api/v1/feedback {
            proxy_set_header X-Forwarded-Prefix /eakte/api/v1/feedback;
            proxy_pass http://eakte-feedback.{{.Release.Namespace}}/feedback;
        }
        location /admin {
            proxy_set_header X-Forwarded-Prefix /eakte/admin;
            proxy_read_timeout 24h;
            proxy_pass http://eakte-admin.{{.Release.Namespace}}/eakte/admin;
        }
        location /viewer/ {
            rewrite ^/viewer/(.*)$ https://$host:443/viewer/$1 permanent;
        }
        location /fileplan-importer-api/ {
            proxy_set_header X-Forwarded-Prefix /eakte/fileplan-importer-api;
            proxy_pass http://eakte-fileplan-importer.{{.Release.Namespace}}/;
        }
    }

    
eakte:
  db:
    user: eakte
    password: changeme
  image:
    imagePullSecret: dockeryuuvisorg
    imagePullPolicy: IfNotPresent
  labels:
    app: eakte
  api: 
    dockerRegistry: docker.yuuvis.org/eakte/eakte-api
    tag:
    instances: 1
    profiles: prod,oauth2,eakte
    java:
      maxHeap: -Xmx2g -XX:MaxDirectMemorySize=1g -XX:+ExitOnOutOfMemoryError
    elasticsearch:
      uri: "http://elasticsearch.infrastructure:9200"
      index: eakte
    volumes: |
        - name: keycloak-tls-selfsigned
          secret:
            defaultMode: 420
            secretName: keycloak-selfsigned-cert-secret
    volumeMounts: |
        - mountPath: /etc/eakte/certs
          name: keycloak-tls-selfsigned
  client:
    dockerRegistry: docker.yuuvis.org/eakte/eakte-client
    tag:
    instances: 1
    
  databaseMigration: 
    dockerRegistry: docker.yuuvis.org/eakte/eakte-postgresql-migration
    tag:
    instances: 1
    profiles: prod,eakte
    java:
      maxHeap: -XX:+ExitOnOutOfMemoryError
    volumes: |
        - name: keycloak-tls-selfsigned
          secret:
            defaultMode: 420
            secretName: keycloak-selfsigned-cert-secret
    volumeMounts: |
        - mountPath: /etc/eakte/certs
          name: keycloak-tls-selfsigned
  schema:
    dockerRegistry: docker.yuuvis.org/eakte/eakte-schema
    tag:
  feedback:
    dockerRegistry: docker.yuuvis.org/eakte/eakte-feedback
    tag:
    instances: 1
    credentials:
        accessKeyId: changeme
        secretAccessKey: changeme
  webhook:
    dockerRegistry: docker.yuuvis.org/eakte/eakte-webhook
    tag:
    instances: 1
    profiles: prod,eakte,oauth2,mq
    java:
      maxHeap: -Xmx128m -XX:+ExitOnOutOfMemoryError
    redis:
      host: "redis-master"
      port: 6379
    elasticsearch:
        uri: "http://elasticsearch.infrastructure:9200"
        index: eakte
    volumes: |
        - name: keycloak-tls-selfsigned
          secret:
            defaultMode: 420
            secretName: keycloak-selfsigned-cert-secret
    volumeMounts: |
        - mountPath: /etc/eakte/certs
          name: keycloak-tls-selfsigned
  filePlanImporter:
    dockerRegistry: docker.yuuvis.org/eakte/eakte-fileplan-importer
    tag:
    instances: 1
    profiles: prod,docker,kubernetes
    java:
      maxHeap: -Xmx128m -XX:+ExitOnOutOfMemoryError
  admin: 
    dockerRegistry: docker.yuuvis.org/eakte/eakte-admin
    tag:
    instances: 1
  tolerations:
  - key: "eakte"
    operator: "Exists"
    effect: "NoSchedule"
